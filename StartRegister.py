from modules.sendShedule import getUserInfo
from modules.keyboard    import keyboard, inlineKeyboardUserType
from modules.shedule     import findGroup
from modules.db          import DataBase

import logging
import json

class Register:

    def __init__(self, bot):

        self.bot = bot


    def start(self, msg):

        self.bot.send_message(msg.chat.id, '*–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫*: `–ö–∞–Ω–¥–∞–ª–µ–Ω—Ü–µ–≤ –ú–∏—Ö–∞–∏–ª`\n*–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π*: `https://github.com/CaTmeNbugS/RaspBot`\n*–í–µ—Ä—Å–∏—è*: `1.0`', parse_mode='Markdown')
        self.bot.send_message(msg.chat.id, f'–ü—Ä–∏–≤–µ—Ç, <b>{msg.from_user.first_name}</b>! –í–≤–µ–¥–∏ –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Å–µ–±–µ\n–¢—ã –≤ –ª—é–±–æ–π –º–æ–º–µ–Ω—Ç –º–æ–∂–µ—à—å –∏—Ö –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞–ø–∏—Å–∞–≤ /start', parse_mode='HTML')

        logging.info(f'{getUserInfo(msg)} start register')

        self.bot.send_message(msg.chat.id, '–¢—ã <b>—Å—Ç—É–¥–µ–Ω—Ç</b> –∏–ª–∏ <b>–ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—å</b>?', reply_markup = inlineKeyboardUserType(), parse_mode='HTML')
        self.bot.register_next_step_handler(msg, self.saveGroup)

    def saveGroup(self,msg):

        dataBase = DataBase('users')
        type     = dataBase.getUser(msg.from_user.id)[2]
        group    = findGroup(type, msg.text)

        if bool(group):

            dataBase.updateUser({'id':  msg.from_user.id, 'dataName': 'groupName', 'data': group})

            self.bot.send_message(msg.chat.id, "üéâ <b>–í—Å–µ –≥–æ—Ç–æ–≤–æ!</b> üéâ", reply_markup = keyboard(), parse_mode='HTML')
            self.bot.send_message(msg.chat.id, "<blockquote><b>–ù–∞–∂–∏–º–∞–π</b> —Å–Ω–∏–∑—É –Ω–∞ <b>–∫–Ω–æ–ø–æ—á–∫–∏</b> –∏ —Å–º–æ—Ç—Ä–∏ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</blockquote>\n<blockquote><b>–ö–Ω–æ–ø–æ—á–∫–∏</b> <b><i>‚¨Ö –ù–µ–¥–µ–ª—è –∏ –ù–µ–¥–µ–ª—è ‚û°Ô∏è</i></b> –≤—ã–≤–æ–¥—è—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ <i>–ø—Ä–æ—à–ª—É—é –∏ —Å–ª–µ–¥—É—é—â—É—é</i> –Ω–µ–¥–µ–ª—å–∫—É —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ</blockquote>\n<blockquote>–ï—â–µ —É –º–µ–Ω—è –µ—Å—Ç—å <b>–∫–æ–º–∞–Ω–¥–∞ /r</b>, –Ω–∞–ø–∏—à–∏ –µ–µ, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –ø—Ä–æ –Ω–µ–µ</blockquote>\n<blockquote><b>–í—Å–µ–≥–æ —Ç–µ–±–µ —Ö–æ—Ä–æ—à–µ–≥–æ! üòâ</b></blockquote>", reply_markup=keyboard(), parse_mode='HTML')

            logging.info(f'{getUserInfo(msg)} successfully registered')

        else:

            self.bot.send_message(msg.chat.id, "<b>–ò–∑–≤–∏–Ω–∏</b>, –Ω–æ —è –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à–µ–ª ü•∫", parse_mode='HTML')
            self.bot.send_message(msg.chat.id, "–ù–∞–ø–∏—à–∏ –≤–æ—Ç –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ: <b>23–ò–°–ü-3 / –ò–í–ê–ù–û–í</b>", parse_mode='HTML')

            logging.warning(f'{getUserInfo(msg)} entered the group incorrectly ({json.dumps(msg.text)})')

            self.bot.register_next_step_handler(msg, self.saveGroup)
